{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAkCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAI,C,SAAEH,E,MAAUC,IAEhBG,EAAI,C,SAAEJ,E,MAAUC,GAAQ,GACzBA,EAAM,G,EAvCD,CACVQ,OAAQC,SAASC,cAAc,WAG7BF,OAAOG,iBAAiB,UAG5B,SAA2BC,GACzBA,EAAIC,iBACJ,MAAOb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAIK,cAAcC,SAC3CC,EAAaC,OAAON,EAAMO,OAC1BC,EAAYF,OAAOL,EAAKM,OACxBE,EAAcH,OAAOJ,EAAOK,OAGlC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EAAG,CAExC1B,EAAc0B,EADDL,EAAaG,GAAaE,EAAI,IAExCC,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjB0B,EAAA9B,GAAS+B,OAAOC,QACd,uBAAqB7B,QAAiBC,MAAU,IAGnD6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClB0B,EAAA9B,GAAS+B,OAAOG,QACd,sBAAoB/B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst ref = {\n  formEl: document.querySelector('.form'),\n}\n\nref.formEl.addEventListener('submit', handlerSubmitForm);\n\n\nfunction handlerSubmitForm(evt) {\n  evt.preventDefault();\n  const {delay, step, amount } = evt.currentTarget.elements\n  const inputDelay = Number(delay.value);\n  const inputStep = Number(step.value);\n  const inputAmount = Number(amount.value);\n\n\n  for (let i = 1; i <= inputAmount; i += 1) {\n    const step = inputDelay + inputStep * (i - 1);\n    createPromise(i, step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n }\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      } else\n        rej({ position, delay });\n    }, delay);\n  });\n}\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","formEl","document","querySelector","addEventListener","evt","preventDefault","delay1","step","amount","currentTarget","elements","inputDelay","Number","value","inputStep","inputAmount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.e415ec95.js.map"}